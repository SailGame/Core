name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release cmd/protoc-gen-go-grpc
    runs-on: ubuntu-20.04

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: 'true'
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Download dependencies
        run: |
          sudo apt install -y make protobuf-compiler
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          make
      - name: Create package
        id: package
        run: |
          PACKAGE_NAME=sailgame.core.${GITHUB_REF#refs/tags/}.${{ matrix.goos }}.${{ matrix.goarch }}.tar.gz
          cp README.md build/
          cp LICENSE build/
          tar -czvf $PACKAGE_NAME -C build .
          echo ::set-output name=name::${PACKAGE_NAME}
      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.package.outputs.name }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_content_type: application/gzip

      - name: Log in to the Container registry
        if: ${{ matrix.goos == 'linux' }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ matrix.goos == 'linux' }}
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        if: ${{ matrix.goos == 'linux' }}
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}